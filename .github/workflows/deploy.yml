# Définition du nom et des déclencheurs
name: Deploy to CapRover
on:
  push:
    branches: [main] # Se déclenche sur les push sur la branche main
  workflow_dispatch: # Permet le déclenchement manuel

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      # 1. Checkout du code
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. Vérification des fichiers de déploiement
      - name: Verify deployment files
        run: |
          echo "=== Repository content ==="
          ls -la
          echo "=== Captain Definition content ==="
          cat captain-definition || echo "Captain Definition not found!"

      # 3. Configuration de Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          cache: "npm"

      # 4. Installation de CapRover CLI
      - name: Install CapRover CLI
        run: npm install -g caprover

      # 5. Connexion à Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      # 6. Configuration de Docker
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # 7. Build et push de l'image Docker
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/${{ secrets.APP_NAME }}:latest
          cache-from: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/${{ secrets.APP_NAME }}:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/${{ secrets.APP_NAME }}:buildcache,mode=max

      # 8. Déploiement vers CapRover
      - name: Deploy to CapRover
        run: |
          caprover deploy \
            --caproverUrl ${{ secrets.CAPROVER_URL }} \
            --caproverPassword ${{ secrets.CAPROVER_PASSWORD }} \
            --caproverName ${{ secrets.CAPROVER_NAME }} \
            --imageName ${{ secrets.DOCKER_USERNAME }}/${{ secrets.APP_NAME }}:latest \
            --appName ${{ secrets.APP_NAME }}

      # 9. Vérification de la santé de l'application
      - name: Health Check
        env:
          VPS_HOST: ${{ secrets.VPS_HOST }}
        run: |
          echo "Attente de la stabilisation du déploiement..."
          sleep 30
          curl --fail http://${VPS_HOST}/_next/static/health || { echo "Health check failed"; exit 1; }

      - name: List files
        run: |
          pwd
          ls -la
